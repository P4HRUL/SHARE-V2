# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Wed Mar 29 12:54:49 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))